// Script ƒë·ªÉ t·∫°o d·ªØ li·ªáu m·∫´u cho vi·ªác test v√© th√°ng theo bi·ªÉn s·ªë xe
// Ch·∫°y script n√†y ƒë·ªÉ th√™m xe m·∫´u v·ªõi bi·ªÉn s·ªë "89-E1*188.96"

const User = require("../models/User");
const Vehicle = require("../models/Vehicle");
const mongoose = require("mongoose");

const createSampleVehicle = async () => {
  try {
    // K·∫øt n·ªëi database
    await mongoose.connect(process.env.MONGODB_URI || "mongodb://localhost:27017/smart-parking");
    
    // T√¨m ho·∫∑c t·∫°o user m·∫´u
    let sampleUser = await User.findOne({ username: "user" });
    
    if (!sampleUser) {
      // T·∫°o user m·ªõi n·∫øu ch∆∞a c√≥
      sampleUser = new User({
        username: "user",
        email: "user@example.com", 
        phone: "0123456789",
        password: "$2b$10$92IXUNpkjO0rOQ5byMi.Ye4oKoEa3Ro9llC/.og/at2.uheWG/igi", // password: user123
        role: "user",
        balance: 5000000, // 5 tri·ªáu VND ƒë·ªÉ test
        isActive: true
      });
      await sampleUser.save();
      console.log("‚úÖ Created sample user");
    }

    // T·∫°o xe m·∫´u v·ªõi bi·ªÉn s·ªë ƒë√£ ch·ªâ ƒë·ªãnh
    const sampleLicensePlate = "89-E1*188.96";
    
    // Ki·ªÉm tra xem xe ƒë√£ t·ªìn t·∫°i ch∆∞a
    const existingVehicle = await Vehicle.findOne({ 
      licensePlate: sampleLicensePlate.toUpperCase() 
    });

    if (existingVehicle) {
      console.log(`‚ö†Ô∏è Vehicle ${sampleLicensePlate} already exists`);
      return;
    }

    // T·∫°o xe m·ªõi
    const sampleVehicle = new Vehicle({
      licensePlate: sampleLicensePlate.toUpperCase(),
      userId: sampleUser._id,
      vehicleType: "car",
      isRegistered: true,
      registrationDate: new Date(),
      isActive: true
    });

    await sampleVehicle.save();

    // C·∫≠p nh·∫≠t danh s√°ch xe c·ªßa user
    await User.findByIdAndUpdate(sampleUser._id, {
      $addToSet: { licensePlates: sampleLicensePlate.toUpperCase() }
    });

    console.log("‚úÖ Created sample vehicle successfully!");
    console.log(`üìã User: ${sampleUser.username} (${sampleUser.email})`);
    console.log(`üöó Vehicle: ${sampleVehicle.licensePlate} (${sampleVehicle.vehicleType})`);
    console.log(`üí∞ User balance: ${sampleUser.balance.toLocaleString()} VND`);
    console.log("");
    console.log("üìù Test instructions:");
    console.log("1. Login with username: user, password: user123");
    console.log("2. Go to user dashboard");
    console.log("3. Click 'Mua v√© th√°ng' button for the sample vehicle");
    console.log("4. Test subscription creation with the sample license plate");

  } catch (error) {
    console.error("‚ùå Error creating sample data:", error);
  } finally {
    await mongoose.disconnect();
    console.log("üì¥ Database disconnected");
  }
};

// Ch·∫°y script n·∫øu ƒë∆∞·ª£c g·ªçi tr·ª±c ti·∫øp
if (require.main === module) {
  createSampleVehicle();
}

module.exports = createSampleVehicle;
